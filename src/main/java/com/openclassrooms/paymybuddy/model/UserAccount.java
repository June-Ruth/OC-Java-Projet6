package com.openclassrooms.paymybuddy.model;

import javax.persistence.*;
import java.util.Set;

/**
 * User account used for application.
 */
@Entity
@Table(name = "user_account")
public class UserAccount {

    /**
     * ID, generated by DataBase.
     * Use as primary key in DataBase.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    @Column(name = "user_account_id")
    private int id;

    /**
     * Associated person.
     * @see Person
     */
    @OneToOne
    @JoinColumn(name = "user_person_id")
    private Person user;

    /**
     * Balance available on user account.
     */
    @Column(name = "balance")
    private double balance;

    /**
     * Set of all established connection with other user account.
     * They will be necessary for transfer.
     */
    @OneToMany(targetEntity = UserAccount.class, mappedBy = "id")
    private Set<UserAccount> connection;

    /**
     * Historic log off all transfer send and receive.
     * @see Transfer
     */
    @OneToMany(targetEntity = Transfer.class, mappedBy = "sender")
    private Set<Transfer> transferLog;

    /**
     * Public constructor.
     * Parameters are all needed and non nullable.
     * @param pUser .
     * @param pBalance .
     * @param pConnection .
     * @param pTransferLog .
     */
    public UserAccount(final Person pUser,
                       final double pBalance,
                       final Set<UserAccount> pConnection,
                       final Set<Transfer> pTransferLog) {
        user = pUser;
        balance = pBalance;
        connection = pConnection;
        transferLog = pTransferLog;
    }

    /**
     * Getter ID.
     * @return ID
     */
    public int getId() {
        return id;
    }

    /**
     * Setter ID.
     * ID is auto-generated, should not be accessible.
     * @param pId to set
     */
    private void setId(final int pId) {
        id = pId;
    }

    /**
     * Getter user.
     * @return user
     */
    public Person getUser() {
        return user;
    }

    /**
     * Setter user.
     * @param pUser to set
     */
    public void setUser(final Person pUser) {
        user = pUser;
    }

    /**
     * Getter balance.
     * @return balance
     */
    public double getBalance() {
        return balance;
    }

    /**
     * Setter balance.
     * @param pBalance to set
     */
    public void setBalance(final double pBalance) {
        balance = pBalance;
    }

    /**
     * Getter connection.
     * @return connection as Set of user account
     */
    public Set<UserAccount> getConnection() {
        return connection;
    }

    /**
     * Setter connection.
     * @param pConnection as Set of user account to set
     */
    public void setConnection(final Set<UserAccount> pConnection) {
        connection = pConnection;
    }

    /**
     * Getter transfer log.
     * @return transfer log as Set of transfer.
     */
    public Set<Transfer> getTransferLog() {
        return transferLog;
    }

    /**
     * Setter transfer log.
     * @param pTransferLog as Set pf transfer to set
     */
    public void setTransferLog(final Set<Transfer> pTransferLog) {
        transferLog = pTransferLog;
    }
}
